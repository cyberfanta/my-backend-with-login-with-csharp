version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4500:80"
    depends_on:
      - sqlserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    restart: on-failure
    networks:
      - backend-network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "4502:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Password123!
    volumes:
      - sqlserver-data:/var/opt/mssql
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Password123!" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - backend-network
      
  azuresqledge:
    image: mcr.microsoft.com/azure-sql-edge:latest
    cap_add: [ 'SYS_PTRACE' ]
    ports:
      - "4503:1433"
    environment:
      - ACCEPT_EULA=1
      - MSSQL_SA_PASSWORD=Password123!
    volumes:
      - azuresqledge-data:/var/opt/mssql
    networks:
      - backend-network
      
  adminer:
    image: adminer:latest
    depends_on:
      - sqlserver
    ports:
      - "4501:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=sqlserver
    networks:
      - backend-network
    restart: on-failure

networks:
  backend-network:
    driver: bridge

volumes:
  sqlserver-data:
  azuresqledge-data: 